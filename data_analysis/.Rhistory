head(sim_w_means)
sim_w_means = rep(NA, B)
sim_w_vars = rep(NA, B)
for(i in 1:B){
if((i %% 100) == 0){
cat(i)
cat("\n")
}
means = rep(NA, D)
for(j in 1:length(sample_sizes)){
means[j] = mean(rnorm(sample_sizes[j], mu, sigma))
}
# not weighted
var(means)
# manually weighted meand and variance
sim_w_means[i] = w_mean = sum(means * sample_sizes) / sum(sample_sizes)
sim_w_vars[i] = sum(sample_sizes * (means - w_mean)^2) / sum(sample_sizes)
}
hist(sim_w_means)
hist(sim_w_vars)
hist(sim_w_means)
abline(v = mu, col = "red")
abline(v = mu, col = "red", lwd = 2)
hist(sim_w_means)
abline(v = mean(sim_w_means), col = "blue", lwd = 2)
abline(v = mu, col = "red", lwd = 2)
hist(sim_w_vars)
abline(v = mean(sim_w_vars), col = "blue", lwd = 2)
sum(sample_sizes^2) / N^2
for(i in 1:B){
if((i %% 100) == 0){
cat(i)
cat("\n")
}
means = rep(NA, D)
for(j in 1:length(sample_sizes)){
means[j] = mean(rnorm(sample_sizes[j], mu, sigma))
}
# not weighted
var(means)
# manually weighted mean and variance
sim_w_means[i] = sum(means * sample_sizes) / sum(sample_sizes)
sim_w_vars[i] = sum(sample_sizes * (means - sim_w_means[i])^2) / sum(sample_sizes)
}
hist(sim_w_means)
abline(v = mean(sim_w_means), col = "blue", lwd = 2)
abline(v = mu, col = "red", lwd = 2)
var(sim_w_means)
B = 1000
D = 100
sample_sizes <- sample(D:(D*10), D)
N = sum(sample_sizes)
true_mean_variance = sigma^2 / N
sim_w_means = rep(NA, B)
sim_w_vars = rep(NA, B)
for(i in 1:B){
if((i %% 100) == 0){
cat(i)
cat("\n")
}
means = rep(NA, D)
for(j in 1:length(sample_sizes)){
means[j] = mean(rnorm(sample_sizes[j], mu, sigma))
}
# manually weighted mean and variance
sim_w_means[i] = sum(means * sample_sizes) / N
sim_w_vars[i] = sum(sample_sizes * (means - sim_w_means[i])^2) / N
}
hist(sim_w_means)
abline(v = mean(sim_w_means), col = "blue", lwd = 2)
abline(v = mu, col = "red", lwd = 2)
var(sim_w_means)
hist(sim_w_vars)
abline(v = mean(sim_w_vars), col = "blue", lwd = 2)
abline(v = sigma^2 * (D - 1)/N, col = "red")
sigma_hat = rep(NA. B)
sigma_hat = rep(NA, B)
sim_sigma = rep(NA, B)
sim_sigma2 = rep(NA, B)
sim_w_means = rep(NA, B)
sim_w_vars = rep(NA, B)
sim_sigma2 = rep(NA, B)
for(i in 1:B){
if((i %% 100) == 0){
cat(i)
cat("\n")
}
means = rep(NA, D)
for(j in 1:length(sample_sizes)){
means[j] = mean(rnorm(sample_sizes[j], mu, sigma))
}
# manually weighted mean and variance
sim_w_means[i] = sum(means * sample_sizes) / N
sim_w_vars[i] = sum(sample_sizes * (means - sim_w_means[i])^2) / N
sim_sigma2[i] = sim_w_vars[i] * N / (D - 1)
}
hist(sim_w_means)
abline(v = mean(sim_w_means), col = "blue", lwd = 2)
abline(v = mu, col = "red", lwd = 2)
var(sim_w_means)
hist(sim_w_vars)
abline(v = mean(sim_w_vars), col = "blue", lwd = 2)
abline(v = sigma^2 * (D - 1)/N, col = "red")
hist(sim_sigma2)
abline(v = mean(sim_sigma2), col = "blue", lwd = 2)
abline(v = sigma, col = "red")
setwd("D:/Progetti/near_duplicate_doc_lsh/data_analysis")
rm(list = ls())
dir_list <- list.dirs(path = "../../data_near_duplicate/robust/lsh_results")
dir_list
# CONSTANTS -----------------
SHARED_BUCK_METRIC_NAME <- "metrics_shared_buckets_number.csv"
SIGN_METRIC_NAME <- "metrics_signature_similarity.csv"
PCH_PRECISION = 16
PCH_RECALL = 8
# parameters sets ------------
nbu <- c("5000000", "10000000", "20000000")
sigl <- c(100, 200, 300)
nba <- c(10, 20)
# Plotting function ------------
PlotTwoBandsVSPrecisionREcall <- function(my_xlab,
my_xlim,
my_dir_list,
my_metrics_name,
x_axis_var_name,
precision_var_name,
recall_var_name){
for (nbuck in nbu){
for(siglen in sigl){
temp_pattern <- paste0(c(nbuck,"_sgn_shl_9_sigl_", siglen), collapse = "")
temp_dirs <- my_dir_list[grep(temp_pattern,my_dir_list)]
temp_nba_10 <- temp_dirs[grep("nba_10",temp_dirs)]
metrics_df_10 <- read.csv(paste0(c(temp_nba_10, my_metrics_name),
collapse = "/"))
temp_nba_20 <- temp_dirs[grep("nba_20",temp_dirs)]
metrics_df_20 <- read.csv(paste0(c(temp_nba_20, my_metrics_name),
collapse = "/"))
plot(metrics_df_10[,x_axis_var_name],
metrics_df_10[,precision_var_name],
col = COL_nba_10,
xlim = my_xlim,
ylim = c(0.4, 1),
xlab = my_xlab,
ylab = "metric",
pch = PCH_PRECISION,
main = paste0(c("N bucket: ", nbuck,
"; Signature len : ", siglen), collapse = ""))
points(metrics_df_10[,x_axis_var_name],
metrics_df_10[,recall_var_name],
pch = PCH_RECALL,
col = COL_nba_10)
points(metrics_df_20[,x_axis_var_name],
metrics_df_20[,precision_var_name],
col = COL_nba_20,
pch = PCH_PRECISION)
points(metrics_df_20[,x_axis_var_name],
metrics_df_20[,recall_var_name],
pch = PCH_RECALL,
col = COL_nba_20)
legend("bottomleft",
legend = c("precision", "recall"),
pch = c(PCH_PRECISION, PCH_RECALL),
bty = "n")
legend("bottomright",
legend = c("10 bands", "20 bands"),
col = c(COL_nba_10, COL_nba_20),
bty = "n",
lty = 1,
lwd = 2)
}
}
}
# no noise ----------------------------
dir_list_no_noise <- dir_list[grep("no_noise", dir_list)]
# 10k ----------------------------------
dir_list_10k <- dir_list[grep("_10k", dir_list)]
# no noise 10k -------------------------------
dir_list_no_noise_10k <- intersect(dir_list_no_noise,
dir_list_10k)
par(mfrow = c(3,3))
COL_nba_10 = "black"
COL_nba_20 = "red"
PlotTwoBandsVSPrecisionREcall(my_xlab = "signature similarity",
my_xlim = c(0.4, 1),
my_dir_list = dir_list_no_noise_10k,
my_metrics_name = SIGN_METRIC_NAME,
x_axis_var_name = "signature_similarity",
precision_var_name = "precision",
recall_var_name = "recall")
PlotTwoBandsVSPrecisionREcall(my_xlab = "signature similarity",
my_xlim = c(0.4, 1),
my_dir_list = dir_list_no_noise_10k,
my_metrics_name = SIGN_METRIC_NAME,
x_axis_var_name = "signature_similarity",
precision_var_name = "precision",
recall_var_name = "recall")
PlotTwoBandsVSPrecisionREcall(my_xlab = "shared bucket number",
my_xlim = c(5, 20),
my_dir_list = dir_list_no_noise_10k,
my_metrics_name = SHARED_BUCK_METRIC_NAME,
x_axis_var_name = "shared_buckets_number",
precision_var_name = "precision",
recall_var_name = "recall")
# small noise ----------------------------
dir_list_small_noise <- dir_list[grep("small_noise", dir_list)]
# no noise 10k -------------------------------
dir_list_small_noise_10k <- intersect(dir_list_small_noise,
dir_list_10k)
par(mfrow = c(3,3))
PlotTwoBandsVSPrecisionREcall(my_xlab = "signature similarity",
my_xlim = c(0.4, 1),
my_dir_list = dir_list_small_noise_10k,
my_metrics_name = SIGN_METRIC_NAME,
x_axis_var_name = "signature_similarity",
precision_var_name = "precision",
recall_var_name = "recall")
# Plot just one nbucket
PlotTwoBandsVSPrecisionREcall <- function(my_nbu,
my_xlab,
my_xlim,
my_dir_list,
my_metrics_name,
x_axis_var_name,
precision_var_name,
recall_var_name){
for(siglen in sigl){
temp_pattern <- paste0(c(my_nbu,"_sgn_shl_9_sigl_", siglen), collapse = "")
temp_dirs <- my_dir_list[grep(temp_pattern,my_dir_list)]
temp_nba_10 <- temp_dirs[grep("nba_10",temp_dirs)]
metrics_df_10 <- read.csv(paste0(c(temp_nba_10, my_metrics_name),
collapse = "/"))
temp_nba_20 <- temp_dirs[grep("nba_20",temp_dirs)]
metrics_df_20 <- read.csv(paste0(c(temp_nba_20, my_metrics_name),
collapse = "/"))
plot(metrics_df_10[,x_axis_var_name],
metrics_df_10[,precision_var_name],
col = COL_nba_10,
xlim = my_xlim,
ylim = c(0.4, 1),
xlab = my_xlab,
ylab = "metric",
pch = PCH_PRECISION,
main = paste0(c("N bucket: ", my_nbu,
"; Signature len : ", siglen), collapse = ""))
points(metrics_df_10[,x_axis_var_name],
metrics_df_10[,recall_var_name],
pch = PCH_RECALL,
col = COL_nba_10)
points(metrics_df_20[,x_axis_var_name],
metrics_df_20[,precision_var_name],
col = COL_nba_20,
pch = PCH_PRECISION)
points(metrics_df_20[,x_axis_var_name],
metrics_df_20[,recall_var_name],
pch = PCH_RECALL,
col = COL_nba_20)
legend("bottomleft",
legend = c("precision", "recall"),
pch = c(PCH_PRECISION, PCH_RECALL),
bty = "n")
legend("bottomright",
legend = c("10 bands", "20 bands"),
col = c(COL_nba_10, COL_nba_20),
bty = "n",
lty = 1,
lwd = 2)
}
}
# Plot just one nbucket
PlotTwoBandsVSPrecisionREcallOneNbuck <- function(my_nbu,
my_xlab,
my_xlim,
my_dir_list,
my_metrics_name,
x_axis_var_name,
precision_var_name,
recall_var_name){
for(siglen in sigl){
temp_pattern <- paste0(c(my_nbu,"_sgn_shl_9_sigl_", siglen), collapse = "")
temp_dirs <- my_dir_list[grep(temp_pattern,my_dir_list)]
temp_nba_10 <- temp_dirs[grep("nba_10",temp_dirs)]
metrics_df_10 <- read.csv(paste0(c(temp_nba_10, my_metrics_name),
collapse = "/"))
temp_nba_20 <- temp_dirs[grep("nba_20",temp_dirs)]
metrics_df_20 <- read.csv(paste0(c(temp_nba_20, my_metrics_name),
collapse = "/"))
plot(metrics_df_10[,x_axis_var_name],
metrics_df_10[,precision_var_name],
col = COL_nba_10,
xlim = my_xlim,
ylim = c(0.4, 1),
xlab = my_xlab,
ylab = "metric",
pch = PCH_PRECISION,
main = paste0(c("N bucket: ", my_nbu,
"; Signature len : ", siglen), collapse = ""))
points(metrics_df_10[,x_axis_var_name],
metrics_df_10[,recall_var_name],
pch = PCH_RECALL,
col = COL_nba_10)
points(metrics_df_20[,x_axis_var_name],
metrics_df_20[,precision_var_name],
col = COL_nba_20,
pch = PCH_PRECISION)
points(metrics_df_20[,x_axis_var_name],
metrics_df_20[,recall_var_name],
pch = PCH_RECALL,
col = COL_nba_20)
legend("bottomleft",
legend = c("precision", "recall"),
pch = c(PCH_PRECISION, PCH_RECALL),
bty = "n")
legend("bottomright",
legend = c("10 bands", "20 bands"),
col = c(COL_nba_10, COL_nba_20),
bty = "n",
lty = 1,
lwd = 2)
}
}
par(mfrow = c(1,3))
COL_nba_10 = "black"
COL_nba_20 = "red"
PlotTwoBandsVSPrecisionREcallOneNbuck(nbu[1],
my_xlab = "signature similarity",
my_xlim = c(0.4, 1),
my_dir_list = dir_list_no_noise_10k,
my_metrics_name = SIGN_METRIC_NAME,
x_axis_var_name = "signature_similarity",
precision_var_name = "precision",
recall_var_name = "recall")
PlotTwoBandsVSPrecisionREcallOneNbuck(nbu[1],
my_xlab = "signature similarity",
my_xlim = c(0.4, 1),
my_dir_list = dir_list_no_noise_10k,
my_metrics_name = SIGN_METRIC_NAME,
x_axis_var_name = "signature_similarity",
precision_var_name = "precision",
recall_var_name = "recall")
PlotTwoBandsVSPrecisionREcallOneNbuck(nbu[1],
my_xlab = "shared bucket number",
my_xlim = c(5, 20),
my_dir_list = dir_list_no_noise_10k,
my_metrics_name = SHARED_BUCK_METRIC_NAME,
x_axis_var_name = "shared_buckets_number",
precision_var_name = "precision",
recall_var_name = "recall")
PlotTwoBandsVSPrecisionREcallOneNbuck(nbu[1],
my_xlab = "signature similarity",
my_xlim = c(0.4, 1),
my_dir_list = dir_list_no_noise_10k,
my_metrics_name = SIGN_METRIC_NAME,
x_axis_var_name = "signature_similarity",
precision_var_name = "precision",
recall_var_name = "recall")
PlotTwoBandsVSPrecisionREcallOneNbuck(nbu[1],
my_xlab = "signature similarity",
my_xlim = c(0.4, 1),
my_dir_list = dir_list_no_noise_10k,
my_metrics_name = SIGN_METRIC_NAME,
x_axis_var_name = "signature_similarity",
precision_var_name = "precision",
recall_var_name = "recall")
par(mfrow = c(1,3))
COL_nba_10 = "black"
COL_nba_20 = "red"
PlotTwoBandsVSPrecisionREcallOneNbuck(nbu[1],
my_xlab = "signature similarity",
my_xlim = c(0.4, 1),
my_dir_list = dir_list_small_noise_10k,
my_metrics_name = SIGN_METRIC_NAME,
x_axis_var_name = "signature_similarity",
precision_var_name = "precision",
recall_var_name = "recall")
setwd("C:/Users/pietr/OneDrive - Università degli Studi di Padova/Progetti/MIDST/near_duplicate_doc_lsh/data_analysis")
rm(list = ls())
dir_list <- list.dirs(path = "../../data_near_duplicate/robust/lsh_results")
dir_list
# CONSTANTS -----------------
SHARED_BUCK_METRIC_NAME <- "metrics_shared_buckets_number.csv"
SIGN_METRIC_NAME <- "metrics_signature_similarity.csv"
PCH_PRECISION = 16
PCH_RECALL = 8
# parameters sets ------------
nbu <- c("2", "5", "10")
sigl <- c(100, 200)
nba <- c(10, 20)
# Plotting function ------------
PlotTwoBandsVSPrecisionREcall <- function(my_xlab,
my_xlim,
my_dir_list,
my_metrics_name,
x_axis_var_name,
precision_var_name,
recall_var_name){
for (nbuck in nbu){
for(siglen in sigl){
temp_pattern <- paste0(c(nbuck,"_sgn_shl_9_sigl_", siglen), collapse = "")
temp_dirs <- my_dir_list[grep(temp_pattern,my_dir_list)]
temp_nba_10 <- temp_dirs[grep("nba_10",temp_dirs)]
metrics_df_10 <- read.csv(paste0(c(temp_nba_10, my_metrics_name),
collapse = "/"))
temp_nba_20 <- temp_dirs[grep("nba_20",temp_dirs)]
metrics_df_20 <- read.csv(paste0(c(temp_nba_20, my_metrics_name),
collapse = "/"))
plot(metrics_df_10[,x_axis_var_name],
metrics_df_10[,precision_var_name],
col = COL_nba_10,
xlim = my_xlim,
ylim = c(0.4, 1),
xlab = my_xlab,
ylab = "metric",
pch = PCH_PRECISION,
main = paste0(c("N bucket: ", nbuck,
"; Signature len : ", siglen), collapse = ""))
points(metrics_df_10[,x_axis_var_name],
metrics_df_10[,recall_var_name],
pch = PCH_RECALL,
col = COL_nba_10)
points(metrics_df_20[,x_axis_var_name],
metrics_df_20[,precision_var_name],
col = COL_nba_20,
pch = PCH_PRECISION)
points(metrics_df_20[,x_axis_var_name],
metrics_df_20[,recall_var_name],
pch = PCH_RECALL,
col = COL_nba_20)
legend("bottomleft",
legend = c("precision", "recall"),
pch = c(PCH_PRECISION, PCH_RECALL),
bty = "n")
legend("bottomright",
legend = c("10 bands", "20 bands"),
col = c(COL_nba_10, COL_nba_20),
bty = "n",
lty = 1,
lwd = 2)
}
}
}
# Plot just one nbucket
PlotTwoBandsVSPrecisionREcallOneNbuck <- function(my_nbu,
my_xlab,
my_xlim,
my_dir_list,
my_metrics_name,
x_axis_var_name,
precision_var_name,
recall_var_name){
for(siglen in sigl){
temp_pattern <- paste0(c(my_nbu,"_sgn_shl_9_sigl_", siglen), collapse = "")
temp_dirs <- my_dir_list[grep(temp_pattern,my_dir_list)]
temp_nba_10 <- temp_dirs[grep("nba_10",temp_dirs)]
metrics_df_10 <- read.csv(paste0(c(temp_nba_10, my_metrics_name),
collapse = "/"))
temp_nba_20 <- temp_dirs[grep("nba_20",temp_dirs)]
metrics_df_20 <- read.csv(paste0(c(temp_nba_20, my_metrics_name),
collapse = "/"))
plot(metrics_df_10[,x_axis_var_name],
metrics_df_10[,precision_var_name],
col = COL_nba_10,
xlim = my_xlim,
ylim = c(0.4, 1),
xlab = my_xlab,
ylab = "metric",
pch = PCH_PRECISION,
main = paste0(c("N bucket: ", my_nbu,
"; Signature len : ", siglen), collapse = ""))
points(metrics_df_10[,x_axis_var_name],
metrics_df_10[,recall_var_name],
pch = PCH_RECALL,
col = COL_nba_10)
points(metrics_df_20[,x_axis_var_name],
metrics_df_20[,precision_var_name],
col = COL_nba_20,
pch = PCH_PRECISION)
points(metrics_df_20[,x_axis_var_name],
metrics_df_20[,recall_var_name],
pch = PCH_RECALL,
col = COL_nba_20)
legend("bottomleft",
legend = c("precision", "recall"),
pch = c(PCH_PRECISION, PCH_RECALL),
bty = "n")
legend("bottomright",
legend = c("10 bands", "20 bands"),
col = c(COL_nba_10, COL_nba_20),
bty = "n",
lty = 1,
lwd = 2)
}
}
# no noise ----------------------------
dir_list_no_noise <- dir_list[grep("no_noise", dir_list)]
# 10k ----------------------------------
dir_list_10k <- dir_list[grep("_10k", dir_list)]
# no noise 10k -------------------------------
dir_list_no_noise_10k <- intersect(dir_list_no_noise,
dir_list_10k)
par(mfrow = c(3,3))
COL_nba_10 = "black"
COL_nba_20 = "red"
PlotTwoBandsVSPrecisionREcall(my_xlab = "signature similarity",
my_xlim = c(0.4, 1),
my_dir_list = dir_list_no_noise_10k,
my_metrics_name = SIGN_METRIC_NAME,
x_axis_var_name = "signature_similarity",
precision_var_name = "precision",
recall_var_name = "recall")
3 * 2 * 2 * 4
4 * 2 * 2 * 4
3 * 2 * 2 * 4 * 4
